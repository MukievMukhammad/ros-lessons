// Generated by gencpp from file mapping/CleanMap.msg
// DO NOT EDIT!


#ifndef MAPPING_MESSAGE_CLEANMAP_H
#define MAPPING_MESSAGE_CLEANMAP_H

#include <ros/service_traits.h>


#include <mapping/CleanMapRequest.h>
#include <mapping/CleanMapResponse.h>


namespace mapping
{

struct CleanMap
{

typedef CleanMapRequest Request;
typedef CleanMapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CleanMap
} // namespace mapping


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::mapping::CleanMap > {
  static const char* value()
  {
    return "c2d6361d68f292f131ab1a72820f26d3";
  }

  static const char* value(const ::mapping::CleanMap&) { return value(); }
};

template<>
struct DataType< ::mapping::CleanMap > {
  static const char* value()
  {
    return "mapping/CleanMap";
  }

  static const char* value(const ::mapping::CleanMap&) { return value(); }
};


// service_traits::MD5Sum< ::mapping::CleanMapRequest> should match
// service_traits::MD5Sum< ::mapping::CleanMap >
template<>
struct MD5Sum< ::mapping::CleanMapRequest>
{
  static const char* value()
  {
    return MD5Sum< ::mapping::CleanMap >::value();
  }
  static const char* value(const ::mapping::CleanMapRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::mapping::CleanMapRequest> should match
// service_traits::DataType< ::mapping::CleanMap >
template<>
struct DataType< ::mapping::CleanMapRequest>
{
  static const char* value()
  {
    return DataType< ::mapping::CleanMap >::value();
  }
  static const char* value(const ::mapping::CleanMapRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::mapping::CleanMapResponse> should match
// service_traits::MD5Sum< ::mapping::CleanMap >
template<>
struct MD5Sum< ::mapping::CleanMapResponse>
{
  static const char* value()
  {
    return MD5Sum< ::mapping::CleanMap >::value();
  }
  static const char* value(const ::mapping::CleanMapResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::mapping::CleanMapResponse> should match
// service_traits::DataType< ::mapping::CleanMap >
template<>
struct DataType< ::mapping::CleanMapResponse>
{
  static const char* value()
  {
    return DataType< ::mapping::CleanMap >::value();
  }
  static const char* value(const ::mapping::CleanMapResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MAPPING_MESSAGE_CLEANMAP_H
